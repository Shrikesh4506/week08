name: Reusable - Build & Test
on:
  workflow_call:
    inputs:
      service_name: { required: true, type: string }
      context_path: { required: true, type: string }
      dockerfile:   { required: false, type: string, default: Dockerfile }
      push_image:   { required: false, type: boolean, default: true }
      node_version: { required: false, type: string, default: "20" }
      test_command: { required: false, type: string, default: "" }
    secrets:
      REGISTRY_USERNAME:     { required: true }
      REGISTRY_PASSWORD:     { required: true }
      REGISTRY_LOGIN_SERVER: { required: true }
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}
      REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node (only if tests need it)
        if: ${{ inputs.test_command != '' }}
        uses: actions/setup-node@v4
        with: { node-version: ${{ inputs.node_version }} }
      - name: Run tests (optional)
        if: ${{ inputs.test_command != '' }}
        run: |
          cd "${{ inputs.context_path }}"
          ${{ inputs.test_command }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context_path }}
          file:    ${{ inputs.context_path }}/${{ inputs.dockerfile }}
          push:    ${{ inputs.push_image }}
          tags: |
            ${{ env.REGISTRY_LOGIN_SERVER }}/${{ inputs.service_name }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY_LOGIN_SERVER }}/${{ inputs.service_name }}:latest
          cache-from: type=registry,ref=${{ env.REGISTRY_LOGIN_SERVER }}/${{ inputs.service_name }}:buildcache
          cache-to:   type=registry,ref=${{ env.REGISTRY_LOGIN_SERVER }}/${{ inputs.service_name }}:buildcache,mode=max
      - id: meta
        name: Expose image tag
        run: echo "image_tag=${IMAGE_TAG}" >> "$GITHUB_OUTPUT"
