name: Backend CI - Test, Lint, Build and Push Images to ACR

on:
  # Manual trigger
  workflow_dispatch:

  # Automatically on pushes to main branch
  push:
    branches:
      - main
    paths: # Only trigger if changes are in backend directories
      - 'backend/**'
      - '.github/workflows/backend_ci.yml'

# Define global environment variables
env:
  ACR_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}  # Unique tag for versioning

jobs:
  # Job 1: Run tests and linting for all backend services (parallel via matrix)
  test_and_lint_backends:
    runs-on: ubuntu-latest

    services:
      # Shared DB for all (but mapped differently per service)
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432  # Default for product; order will use env override

    strategy:
      matrix:
        service: [product_service, order_service]
        port: [5432, 5433]  # Map ports dynamically
        db_name: [products, orders]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r backend/${{ matrix.service }}/requirements.txt
          pip install pytest flake8 black  # Add linting tools

      - name: Lint backend service
        working-directory: backend/${{ matrix.service }}
        run: |
          black --check .  # Format check
          flake8 .  # Style check

      - name: Run ${{ matrix.service }} tests
        working-directory: backend/${{ matrix.service }}
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ matrix.port }}
          POSTGRES_DB: ${{ matrix.db_name }}
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          pytest tests --maxfail=1 --disable-warnings -q -v  # Added -v for better output

  # Job 2: Build and Push Docker Images (runs only if tests pass)
  build_and_push_images:
    runs-on: ubuntu-latest
    needs: test_and_lint_backends

    strategy:
      matrix:
        service: [product_service, order_service]
        context: ['./backend/product_service/', './backend/order_service/']  # Parallel build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Azure Container Registry
      run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

    - name: Build and Push ${{ matrix.service }} Image
      run: |
        docker build -t ${{ env.ACR_LOGIN_SERVER }}/${{ matrix.service }}:${{ env.IMAGE_TAG }} ${{ matrix.context }}
        docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_TAG }}/${{ matrix.service }}:${{ env.IMAGE_TAG }}

    - name: Logout from Azure
      if: always()
      run: az logout